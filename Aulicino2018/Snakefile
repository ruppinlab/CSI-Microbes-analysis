from os.path import join
import pandas as pd

wildcard_constraints:
    patient="Pt0",
    plate="P1|P2|P3|P4",
    celltype="status|infected|infection"


NORM_COMP_PLOT = join("output", "normalization-comparison-{patient}-{celltype}-{microbe}-{tax_level}-{method}-plot.png")
DECONV_NORM_PLOT = join("output", "deconv-normalization-{patient}-{celltype}-{microbe}-{tax_level}-{method}-{kingdom}-plot.png")
SPIKE_NORM_PLOT = join("output", "spike-normalization-{patient}-{celltype}-{microbe}-{tax_level}-{method}-plot.png")

TTEST_MARKERS = join("output", "t-test-{patient}-{celltype}-{celltype_of_interest}-{tax_level}-{method}-{kingdom}-{norm}-{pvaltype}.tsv")
WILCOX_MARKERS = join("output", "wilcox-{patient}-{celltype}-{celltype_of_interest}-{tax_level}-{method}-{kingdom}-{norm}-{pvaltype}.tsv")
#PLATE_TTEST_MARKERS = join("output", "t-test-{patient}-{celltype}-{celltype_of_interest}-{tax_level}-{method}-{norm}-{infected_plate}-{control_plate}.tsv")
#PLATE_WILCOX_MARKERS = join("output", "wilcox-{patient}-{celltype}-{celltype_of_interest}-{tax_level}-{method}-{norm}-{infected_plate}-{control_plate}.tsv")
#COMBINED_PLATE_WILCOX_MARKERS = join("output", "combined-wilcox-{patient}-{celltype}-{celltype_of_interest}-{tax_level}-{method}-{norm}-{infected_plate1}-{infected_plate2}-{control_plate1}-{control_plate2}.tsv")
FIGURE1 = join("output", "figure1.png")

# parameters
SPIKE_PREFIX = "ERCC-00"
include: "../rules/common.smk"
include: "../rules/stats.smk"
include: "../rules/spikein.smk"
include: "../rules/plotting.smk"
plates = ["P1", "P2", "P3", "P4"]

rule all:
    input:
        #expand(DECONV_NORM_PLOT, patient="Pt0", tax_level="strain", method="PathSeq", celltype="infection", kingdom="Bacteria", microbe=["Salmonella_enterica_subsp._enterica_serovar_Typhimurium_str._D23580", "Salmonella_enterica_subsp._enterica_serovar_Typhimurium_str._LT2"]),
        expand(DECONV_NORM_PLOT, patient="Pt0", tax_level="genus", method="PathSeq", celltype="infected", kingdom="Bacteria", microbe=["Salmonella"]),
        expand(WILCOX_MARKERS, patient="Pt0", tax_level="genus", method="PathSeq", celltype="infected", celltype_of_interest=["infected"], norm="deconv", kingdom="Bacteria", pvaltype="all"),
        # expand(WILCOX_MARKERS, patient="Pt0", tax_level="genus", method="PathSeq", celltype="status", celltype_of_interest=["infected"], norm="deconv", kingdom="Bacteria")

# figure 1 consists of figure 1a and figure 1b
# figure 1a - comparison of infected vs. exposed vs. uninfected
# figure 1b - table of results from CSI-Microbes test
rule plot_fig1:
    input:
        PATIENT_MICROBE_READ_TABLE.format(patient="Pt0", method="PathSeq", tax_level="genus", kingdom="Bacteria"),
        PATIENT_SAMPLE_METADATA.format(patient="Pt0", method="PathSeq", tax_level="genus", kingdom="Bacteria"),
    output:
        FIGURE1
    script:
        "src/plot_figure1.R"

rule convert_PathSeq_to_read_counts:
    wildcard_constraints:
        method="PathSeq"
    params:
        join("data", "PathSeq", "{}-{}", "pathseq.txt")
    input:
        "data/patients.tsv",
        "data/samples.tsv",
    output:
        MICROBE_READ_TABLE,
        SAMPLE_METADATA,
    script:
        "../src/convert_PathSeq_output_to_read_counts.py"

#
# rule combine_plate_tests:
#     input:
#         PLATE_WILCOX_MARKERS.format(patient="{patient}", method="{method}", celltype="{celltype}",
#                                     celltype_of_interest="{celltype_of_interest}", tax_level="{tax_level}",
#                                     norm="{norm}", infected_plate="{infected_plate1}", control_plate="{control_plate1}"),
#         PLATE_WILCOX_MARKERS.format(patient="{patient}", method="{method}", celltype="{celltype}",
#                                     celltype_of_interest="{celltype_of_interest}", tax_level="{tax_level}",
#                                     norm="{norm}", infected_plate="{infected_plate1}", control_plate="{control_plate2}"),
#         PLATE_WILCOX_MARKERS.format(patient="{patient}", method="{method}", celltype="{celltype}",
#                                     celltype_of_interest="{celltype_of_interest}", tax_level="{tax_level}",
#                                     norm="{norm}", infected_plate="{infected_plate2}", control_plate="{control_plate1}"),
#         PLATE_WILCOX_MARKERS.format(patient="{patient}", method="{method}", celltype="{celltype}",
#                                     celltype_of_interest="{celltype_of_interest}", tax_level="{tax_level}",
#                                     norm="{norm}", infected_plate="{infected_plate2}", control_plate="{control_plate2}"),
#     output:
#         COMBINED_PLATE_WILCOX_MARKERS
#     script:
#         "src/combine_plate_tests.py"
#
#
# rule calculate_markers_spikein_plate_test:
#     wildcard_constraints:
#         norm="spike"
#     params:
#         spike=SPIKE_PREFIX
#     input:
#         PATIENT_MICROBE_READ_TABLE,
#         PATIENT_SAMPLE_METADATA,
#         STAR_READCOUNT_TABLE
#     output:
#         PLATE_TTEST_MARKERS,
#         PLATE_WILCOX_MARKERS
#     script:
#         "src/run_scran_marker_analysis_spikein_plate.R"
#
# rule calculate_markers_plate_test:
#     wildcard_constraints:
#         norm="deconv"
#     input:
#         PATIENT_MICROBE_READ_TABLE,
#         PATIENT_SAMPLE_METADATA
#     output:
#         PLATE_TTEST_MARKERS,
#         PLATE_WILCOX_MARKERS
#     script:
#         "src/run_scran_marker_analysis_plate.R"


rule combine_STAR_output:
    input:
        "data/patients.tsv",
        "data/samples.tsv",
    output:
        STAR_READCOUNT_TABLE
    script:
        "src/combine_star_read_files.py"


# rule combine_filter_metrics:
#     input:
#         "data/samples.tsv",
#     output:
#         COMBINED_FILTER_METRICS
#     script:
#         "../src/combine_filter_metrics.py"
#
# rule download_filter_metrics:
#     shell:
#         "rsync -avc --include='filter-metrics.txt' --include='*/' --exclude='*' biowulf:/data/Robinson-SB/scRNA-seq-microbe-identification/Aulicino2018/identify-microbes-workflow/output/PathSeq/ filter-metrics/"

# rsync -avc --include='filter-metrics.txt' --include='*/' --exclude='*' helix:/data/Robinson-SB/scRNA-seq-microbe-identification/Aulicino2018/identify-microbes-workflow/output/ data/

# rsync -avc --include='pathseq.txt' --include='*/' --exclude='*' helix:/data/Robinson-SB/scRNA-seq-microbe-identification/Aulicino2018/output/ data/

# rsync -avc --include='ReadsPerGene.out.tab' --include='*/' --exclude='*' helix:/data/Robinson-SB/scRNA-seq-microbe-identification/Aulicino2018/identify-microbes-workflow/output/ data/
