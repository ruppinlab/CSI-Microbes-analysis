from os.path import join
import pandas as pd

#ruleorder: calculate_markers_spikein_plate_test > calculate_patient_markers_using_spikeins

wildcard_constraints:
    infection="LT2|D23580",
    genome="LT2|D23580",
    infected="infected|bystander",
    sample="S0",
    patient="Pt0",
    celltype_of_interest="infected|bystander|uninfected|D23580|LT2|(D23580|LT2)-(bystander|infected)-[2-6]h|(LT2|D23580)-(bystander|infected)",
    celltype_comparison="infected|bystander|uninfected|D23580|LT2|(D23580|LT2)-(bystander|infected)-[2-6]h|(LT2|D23580)-(bystander|infected)",
    block="plate|infection|patient"

# parameters
SPIKE_PREFIX = "ERCC-"
include: "../rules/common.smk"
include: "../rules/STARsolo.smk"
include: "../rules/analysis-SS2.smk"
include: "../rules/spikein.smk"
#include: "../rules/hFDR.smk"

units = pd.read_csv("data/units.tsv", sep="\t")



# Supplementary Tables
TABLE_S1_1 = join("output", "table_S1.tsv")

# Figures
FIGURE_1B = join("output", "plots", "figure_1B.pdf")
FIGURE_2B = join("output", "plots", "figure_2B.svg")



rule:
    input:
        TABLE_S1_1,
        FIGURE_1B,
        FIGURE_2B,


### Figures ###

# plot piechart
rule plot_figure_2B:
    input:
        PATIENT_MICROBE_READ_TABLE.format(kingdom="All", method="PathSeq",
               patient="Pt0", tax_level="genus"),
        PATIENT_SAMPLE_METADATA.format(kingdom="All", method="PathSeq",
               patient="Pt0", tax_level="genus"),
        PATIENT_PATHSEQ_TAXID_MAP.format(kingdom="All", method="PathSeq",
               patient="Pt0"),
    output:
        FIGURE_2B
    script:
        "src/plot_figure_2B.py"


rule plot_figure_1B:
    params:
        spike_functions="../src/spike_normalization_functions.R"
    input:
        PATIENT_MICROBE_READ_TABLE.format(kingdom="All", method="PathSeq",
               patient="Pt0", tax_level="genus"),
        PATIENT_SPIKEIN_READCOUNT.format(patient="Pt0", sample="S0"),
        PATIENT_SAMPLE_METADATA.format(kingdom="All", method="PathSeq",
               patient="Pt0", tax_level="genus"),
        PATIENT_PATHSEQ_TAXID_MAP.format(kingdom="All", method="PathSeq",
               patient="Pt0"),
    output:
        FIGURE_1B
    script:
        "src/plot_figure_1B.R"

### Tables ###

rule generate_table_S1:
    input:
        expand(PATIENT_WILCOX_MARKERS, kingdom=["All"], method="PathSeq",
               patient="Pt0", celltype=["infected"], lfc=["0.5"], tax_level="genus",
               celltype_of_interest="infected", celltype_comparison=["bystander"],
               norm="spike", pvaltype="any", block="plate", direction=["both"], minprop="0.5"),
        expand(PATIENT_WILCOX_MARKERS, kingdom=["All"], method="PathSeq",
               patient="Pt0", celltype=["infected"], lfc=["0.5"], tax_level="genus",
               celltype_of_interest="infected", celltype_comparison=["uninfected"],
               norm="spike", pvaltype="any", block="plate", direction=["both"], minprop="0.5"),
        expand(PATIENT_WILCOX_MARKERS, kingdom=["All"], method="PathSeq",
               patient="Pt0", celltype=["infected"], lfc=["0.5"], tax_level="genus",
               celltype_of_interest="bystander", celltype_comparison=["uninfected"],
               norm="spike", pvaltype="any", block="plate", direction=["both"], minprop="0.5"),
    output:
        TABLE_S1_1
    script:
        "src/generate_table_S1.R"
