from os.path import join

wildcard_constraints:
    pvaltype="all|any|some",
    patient="Pt0",
    sample="GSM3454528|GSM3454529",
    celltype="Monocyte",

include: "../rules/common.smk"
include: "../rules/analysis-10x.smk"
include: "../rules/hFDR.smk"

#BINOM_PLOT = join("output", "{patient}", "{sample}", "plots", "binomial-plot-{celltype}-{celltype_of_interest}-{celltype_comparison}-{tax_level}-{method}-{kingdom}-{pvaltype}-{lfc}-{block}-{microbe_of_interest}.jpg")
FIGURE_S2 = join("output", "plots", "figure_S2.pdf")

SAMPLE_BINOM_VOLCANO_ALL_TAXA = join("output", "volcano_plot_all_taxa.pdf")
FIGURE_2B_1 = join("output", "plots", "figure_2B_1.pdf")
FIGURE_2B_2 = join("output", "plots", "figure_2B_2.pdf")

TABLE_S1_2 = join("output", "Table_S1_2.tsv")

SRPRISM_READ_COUNT_FILE = join("raw", "SRPRISM", "{patient}", "{sample}", "CB-UMI-count-{genome}.tsv")

rule all:
    input:
        TABLE_S1_2,
        FIGURE_S2,
        FIGURE_2B_1,
        FIGURE_2B_2,
        SAMPLE_hFDR_FISHER_MARKERS.format(patient="Pt0", sample="GSM3454529",
                                          celltype="Monocyte", celltype_of_interest="Monocyte",
                                          celltype_comparison="nonMonocyte",
                                          method="PathSeq", kingdom="Bacteria", minprop=0),
        expand(SAMPLE_FISHER_EXACT, patient="Pt0", sample=["GSM3454529"], tax_level=["class", "order", "family", "genus", "species"],
               microbe_of_interest="Salmonella", minprop=0,
               celltype="Monocyte", celltype_of_interest="Monocyte", celltype_comparison="nonMonocyte",
               method="PathSeq", kingdom="Bacteria"),
        # expand(FIGURE2B_extended, patient="Pt0", sample=["GSM3454529"], tax_level="genus",
        #        microbe_of_interest="Salmonella",
        #        celltype="Monocyte", celltype_of_interest="Monocyte", celltype_comparison="nonMonocyte",
        #        method="PathSeq", kingdom="Bacteria"),

### Rules for Figures ###

rule plot_figure_2B:
    input:
        FIGURE_2B_1,
        FIGURE_2B_2,


rule plot_figure_2B_1:
    input:
        expand(SAMPLE_FISHER_EXACT, kingdom=["Bacteria"], method="PathSeq",
               patient="Pt0", celltype=["Monocyte"], sample="GSM3454529", minprop=0,
               tax_level=["species", "genus", "family", "order", "class", "phylum"],
               celltype_of_interest="Monocyte", celltype_comparison=["nonMonocyte"])
    output:
        FIGURE_2B_1
    script:
        "src/plot_figure_2B_1.R"

rule plot_figure_2B_2:
    input:
        SAMPLE_MICROBE_READ_TABLE.format(kingdom="Bacteria", method="PathSeq",
               patient="Pt0", sample="GSM3454529", tax_level="genus"),
        SAMPLE_SAMPLE_METADATA.format(kingdom="Bacteria", method="PathSeq",
               patient="Pt0", sample="GSM3454529", tax_level="genus"),
        PATIENT_PATHSEQ_TAXID_MAP.format(kingdom="Bacteria", method="PathSeq",
               patient="Pt0"),
    output:
        FIGURE_2B_2
    script:
        "src/plot_2B_2.R"

rule plot_figure_S2:
    input:
        SAMPLE_SAMPLE_METADATA.format(patient="Pt0", sample="GSM3454529", tax_level="genus", method="PathSeq", kingdom="Bacteria"),
        SRPRISM_READ_COUNT_FILE.format(patient="Pt0", sample="GSM3454529", genome="SL1344")
    output:
        FIGURE_S2
    script:
        "src/plot_figure_S2.R"

### Rules for Supplementary Tables ###

rule generate_table_S1:
    input:
        expand(SAMPLE_FISHER_EXACT, kingdom=["Bacteria"], method="PathSeq",
               patient="Pt0", celltype=["Monocyte"], sample="GSM3454529", minprop=0,
               tax_level=["species", "genus", "family", "order", "class", "phylum"],
               celltype_of_interest="Monocyte", celltype_comparison=["nonMonocyte"])
    output:
        TABLE_S1_2
    script:
        "src/generate_table_S1_2.R"

# rsync -avc --include='pathseq.txt' --include='*/' --exclude='*' helix:/data/Robinson-SB/CSI-Microbes-identification/Ben-Moshe2019/output/ data/
# rsync -avc --include='CB-UMI-count-SL1344.tsv' --include='*/' --exclude='*' helix:/data/Robinson-SB/CSI-Microbes-identification/Ben-Moshe2019/output/ data/
# rsync -avc --include='raw_feature_bc_matrix.h5' --include='*/' --exclude='*' helix:/data/Robinson-SB/CSI-Microbes-identification/Ben-Moshe2019/ data/
