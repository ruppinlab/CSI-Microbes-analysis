from os.path import join

wildcard_constraints:
    tax_level="root|superkingdom|phylum|class|order|family|genus|species|no_rank",
    patient="2586-4|9245-3",
    celltype="Tumor|celltype1|celltype2",
    microbe_of_interest="Human_polyomavirus_5",
    kingdom="Bacteria|Viruses"



PATIENT_MICROBE_READ_TABLE = join("output", "{patient}", "{tax_level}_{method}_{kingdom}_reads.tsv")
PATIENT_SAMPLE_METADATA = join("output", "{patient}", "{tax_level}_{method}_{kingdom}_metadata.tsv")
SAMPLE_MICROBE_READ_TABLE = join("output", "{patient}", "{sample}_{tax_level}_{method}_{kingdom}_reads.tsv")
SAMPLE_SAMPLE_METADATA = join("output", "{patient}", "{sample}_{tax_level}_{method}_{kingdom}_metadata.tsv")
PATIENT_BINOM_MARKERS = join("output", "{patient}", "binomial-{celltype}-{celltype_of_interest}-{celltype_comparison}-{tax_level}-{method}-{kingdom}-{pvaltype}-{lfc}-{block}.tsv")
SAMPLE_BINOM_MARKERS = join("output", "{patient}", "{sample}", "binomial-{celltype}-{celltype_of_interest}-{celltype_comparison}-{tax_level}-{method}-{kingdom}-{pvaltype}-{lfc}-{block}.tsv")

BINOM_PLOT = join("output", "{patient}", "plots", "binomial-plot-{celltype}-{celltype_of_interest}-{celltype_comparison}-{tax_level}-{method}-{kingdom}-{pvaltype}-{lfc}-{block}-{microbe_of_interest}.jpg")


rule all:
    input:
        # expand(PATIENT_BINOM_MARKERS, patient=["2586-4"], celltype="Tumor",
        #        celltype_of_interest="Tumor", celltype_comparison="nonTumor",
        #        tax_level=["class", "order", "family", "genus", "species"],
        #        block="sample", kingdom=["Bacteria", "Viruses"], lfc=0,
        #        method="PathSeq", pvaltype="all"),
        # expand(PATIENT_BINOM_MARKERS, patient=["9245-3"], celltype="Tumor",
        #        celltype_of_interest="Tumor", celltype_comparison="nonTumor",
        #        tax_level=["class", "order", "family", "genus", "species"],
        #        block="sample", kingdom=["Bacteria", "Viruses"], lfc=0,
        #        method="PathSeq", pvaltype="all"),
        expand(BINOM_PLOT, patient=["9245-3", "2586-4"], celltype="Tumor",
               celltype_of_interest="Tumor", celltype_comparison="nonTumor",
               tax_level=["species"], block="sample", kingdom="Viruses", lfc=0,
               method="PathSeq", pvaltype="all", microbe_of_interest="Human_polyomavirus_5"),

rule plot_fig4:
    input:
        PATIENT_MICROBE_READ_TABLE,
        PATIENT_SAMPLE_METADATA
    output:
        BINOM_PLOT
    script:
        "../src/plot_binomial_result.R"


rule calculate_sample_binomial_markers:
    input:
        SAMPLE_MICROBE_READ_TABLE,
        SAMPLE_SAMPLE_METADATA
    output:
        SAMPLE_BINOM_MARKERS,
    script:
        "../src/run_scran_binomial_marker_analysis.R"

rule calculate_patient_binomial_markers:
    input:
        PATIENT_MICROBE_READ_TABLE,
        PATIENT_SAMPLE_METADATA
    output:
        PATIENT_BINOM_MARKERS,
    script:
        "../src/run_scran_binomial_marker_analysis.R"

# rule calculate_batch_markers:
#     wildcard_constraints:
#         norm="deconv"
#     input:
#         PATIENT_BATCH_MICROBE_READ_TABLE,
#         PATIENT_BATCH_SAMPLE_METADATA
#     output:
#         PATIENT_BATCH_BINOM_MARKERS
#     script:
#         "../src/run_scran_binomial_marker_analysis.R"
#
# rule calculate_patient_markers:
#     wildcard_constraints:
#         norm="deconv"
#     input:
#         PATIENT_MICROBE_READ_TABLE,
#         PATIENT_SAMPLE_METADATA
#     output:
#         PATIENT_BINOM_MARKERS
#     script:
#         "../src/run_scran_binomial_marker_analysis.R"

rule filter_patient_read_table_by_sample:
    input:
        PATIENT_MICROBE_READ_TABLE,
        PATIENT_SAMPLE_METADATA
    output:
        SAMPLE_MICROBE_READ_TABLE,
        SAMPLE_SAMPLE_METADATA
    script:
        "../src/split_read_matrices_by_sample.py"


rule convert_PathSeq_to_readcounts:
    wildcard_constraints:
        method="PathSeq"
    params:
        join("data", "PathSeq", "{}-{}-{}", "pathseq.txt")
    input:
        "data/units.tsv"
    output:
        PATIENT_MICROBE_READ_TABLE,
        PATIENT_SAMPLE_METADATA
    script:
        "../src/convert_scPathSeq_output_to_read_counts.py"





# rsync -avc --include='pathseq.txt' --include='*/' --exclude='*' helix:/data/Robinson-SB/CSI-Microbes-identification/Paulson2018/output/ data/
