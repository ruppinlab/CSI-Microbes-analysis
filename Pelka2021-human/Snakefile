from os.path import join

wildcard_constraints:
  overlap="inclusive|exclusive",
  celltype_columns="celltype1|celltype2",
  celltype="|".join(["Epithelial", "Myeloid", "B", "Stromal", "TNKILC", "Monocyte", "Macrophage"]),
  direction="up|down"

# input data
H5_read_matrix = join("data", "GSE178341_crc10x_full_c295v4_submit.h5")
cohort_microbe_metadata = join("data", "metadata_for_host_transcriptome_analysis.tsv")

Seurat_all_RDS_obj = join("output", "seurat_objects", "all_cells.rds")
Seurat_subset_RDS_obj = join("output", "seurat_objects", "{celltype_column}_{celltype}_cells.rds")
# processed data files
COHORT_RANKED_GENES = join("output", "gene_markers", "{celltype_column}_{celltype}_{phenotype}_{ident1}_{ident2}.tsv")
COHORT_DE_GENES = join("output", "DE_genes", "{celltype_column}_{celltype}_{phenotype}_{ident1}_{ident2}.tsv")
VOLCANO_PLOT = join("output", "plots", "{celltype_column}_{celltype}_{phenotype}_{ident1}_{ident2}.pdf")
COHORT_RANKED_GENES_GSEA = join("output", "GSEA_markers", "{celltype_column}_{celltype}_{phenotype}_{ident1}_{ident2}_bypval.rnk")

GENES_OF_INTEREST_MATRIX = join("output", "gene_matrix", "genes_of_interest_{celltype_column}_{celltype}_{phenotype}_{ident1}_{ident2}.tsv")

localrules: download_H5_read_matrix, convert_markers_to_GSEA_input


rule all:
    input:
        expand(COHORT_RANKED_GENES_GSEA, celltype_column="celltype1", celltype=["Epithelial"], phenotype="infection", ident1="infected", ident2="uninfected", direction=["down", "up"]),
        expand(COHORT_RANKED_GENES_GSEA, celltype_column="celltype1", celltype="Myeloid", phenotype="infection", ident1="infected", ident2="uninfected", direction=["down", "up"]),


rule convert_markers_to_GSEA_input:
    conda:
        "../envs/pandas-env.yaml"
    input:
        COHORT_RANKED_GENES
    output:
        COHORT_RANKED_GENES_GSEA
    script:
        "../src/convert_markers_to_GSEA_format.py"

# given a phenotypic marker (i.e. infection or Fusobacterium_infection), look for DE genes between uninfected and infected
rule identify_cohort_gene_markers:
    conda:
        "../envs/seurat-env.yaml"
    resources:
        mem_mb=32000, # mem="16GB" is not handled correctly by the submit script
        disk_mb=10000,
        time="16:00:00"
    input:
        Seurat_subset_RDS_obj,
    output:
        COHORT_RANKED_GENES
    script:
        "../src/identify_cohort_gene_markers_for_GSEA.R"

rule volcano_plot_DE_genes:
    conda:
        "../envs/seurat-env.yaml"
    input:
        COHORT_DE_GENES
    output:
        VOLCANO_PLOT
    script:
        "../src/plot_DE_genes.R"


# given a phenotypic marker (i.e. infection or Fusobacterium_infection), look for DE genes between uninfected and infected
rule identify_cohort_DE_genes:
    conda:
        "../envs/seurat-env.yaml"
    resources:
        mem_mb=32000, # mem="16GB" is not handled correctly by the submit script
        disk_mb=10000,
        time="2:00:00"
    input:
        Seurat_subset_RDS_obj,
    output:
        COHORT_DE_GENES
    script:
        "../src/identify_cohort_gene_markers.R"


rule extract_GE_for_genes_of_interest:
    input:
        Seurat_subset_RDS_obj,
    output:
        GENES_OF_INTEREST_MATRIX
    script:
        "../src/extract_GE_genes_of_interest.R"

# split on specific cell-type
rule generate_subset_rds_object:
    conda:
        "../envs/seurat-env.yaml"
    resources:
        mem_mb=32000, # mem="16GB" is not handled correctly by the submit script
        disk_mb=10000,
        time="2:00:00" # runtime="2h" doesn't work (it translates to 120 seconds, not minutes) and runtime="8:00:00" doesn't parse
    input:
        H5_read_matrix,
        cohort_microbe_metadata
    output:
        Seurat_subset_RDS_obj
    script:
        "src/generate_seurat_rds_object.R"

rule generate_all_rds_object:
    conda:
        "../envs/seurat-env.yaml"
    input:
        H5_read_matrix,
        cohort_microbe_metadata
    output:
        Seurat_all_RDS_obj
    script:
        "src/generate_seurat_rds_object_all_cells.R"

rule download_H5_read_matrix:
    output:
        H5_read_matrix
    shell:
        "wget https://ftp.ncbi.nlm.nih.gov/geo/series/GSE178nnn/GSE178341/suppl/GSE178341_crc10x_full_c295v4_submit.h5 --no-check-certificate -P data"
