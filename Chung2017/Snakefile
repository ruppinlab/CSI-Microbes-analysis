from os.path import join
import pandas as pd

wildcard_constraints:
    patient="BC01|BC03|BC04|BC05|BC06|BC07|BC08|BC10"


patients = ["BC03", "BC04", "BC06", "BC07", "BC08"]
#
# EDGER_RESULTS = join("output", "{tax_level}_{method}_edgeR_{norm_method}_results_{patient}-{celltype}.tsv")
# MICROBE_CPM_PLOT = join("output", "{tax_level}-{microbe}_microbe_cpm-{celltype}.png")
# EDGER_SPIKE_RESULTS = join("output", "{tax_level}_edgeR_spike_results_{patient}-{celltype}.tsv")

COMBINED_FILTER_METRICS = join("output", "dataset-filter-metrics.tsv")
COMBINED_SCORE_METRICS = join("output", "dataset-score-metrics.tsv")
NORM_COMP_PLOT = join("output", "normalization-comparison-{patient}-{celltype}-{microbe}-{tax_level}-{kingdom}-{method}-plot.png")

SPIKE_NORM_PLOT = join("output", "spike-normalization-{patient}-{celltype}-{microbe}-{tax_level}-{kingdom}-{method}-plot.png")

TTEST_MARKERS = join("output", "t-test-{patient}-{celltype}-{celltype_of_interest}-{tax_level}-{kingdom}-{method}-{norm}.tsv")
WILCOX_MARKERS = join("output", "wilcox-{patient}-{celltype}-{celltype_of_interest}-{tax_level}-{kingdom}-{method}-{norm}.tsv")
#BINOM_MARKERS = join("output", "binomial-{patient}-{celltype}-{celltype_of_interest}-{tax_level}-{kingdom}-{method}-{norm}.tsv")

FIGURE_2A = join("output", "figure2a.png")
# parameters
SPIKE_PREFIX = "RNA_SPIKE"

include: "../rules/common.smk"
include: "../rules/stats.smk"
include: "../rules/spikein.smk"
include: "../rules/plotting.smk"

rule all:
    input:
        COMBINED_SCORE_METRICS,
        expand(WILCOX_MARKERS, patient="BC06", celltype=["Tumor"], celltype_of_interest="Tumor", tax_level=["genus", "species"], norm=["deconv"], method="PathSeq", kingdom=["Bacteria"]),
        # expand(DECONV_NORM_PLOT, patient=["BC06", "BC08"], celltype=["Tumor"], kingdom="Archaea", tax_level="genus", method="PathSeq", microbe=["Halococcus"]),
        #expand(DECONV_NORM_PLOT, patient="BC06", celltype=["celltype1"], kingdom="Bacteria", tax_level="species", method="PathSeq", microbe=["Streptomyces_specialis"]),
        #expand(DECONV_NORM_PLOT, patient="BC06", celltype=["celltype1"], kingdom="Bacteria", tax_level="genus", method="PathSeq", microbe=["Streptomyces", "Escherichia"]),
        # expand(DECONV_NORM_PLOT, patient="BC06", celltype=["celltype1"], kingdom="Bacteria", tax_level="genus", method="PathSeq", microbe="Escherichia"),
        # expand(DECONV_NORM_PLOT, patient="BC06", celltype=["celltype1"], kingdom="Bacteria", tax_level="species", method="PathSeq", microbe=["Streptomyces_griseoluteus", "Streptomyces_xylophagus"])#, "Streptomyces_sp._NRRL_B-12105"])

        # FIGURE_2A,
        # expand(ALL_MICROBE_SPIKEIN_CORR_FILE, tax_level="genus", method="PathSeq"),
        # expand(PATIENT_MICROBE_SPIKEIN_CORR_FILE, tax_level="genus", method="PathSeq", patient="BC06", celltype="Tumor")

rule plot_figure2a:
    input:
        PATIENT_MICROBE_READ_TABLE.format(patient="BC06", method="PathSeq", tax_level="genus", kingdom="Bacteria"),
        PATIENT_MICROBE_READ_TABLE.format(patient="BC06", method="PathSeq", tax_level="species", kingdom="Bacteria"),
        PATIENT_SAMPLE_METADATA.format(patient="BC06", method="PathSeq", tax_level="genus", kingdom="Bacteria"),
        PATIENT_SAMPLE_METADATA.format(patient="BC06", method="PathSeq", tax_level="species", kingdom="Bacteria")
    output:
        FIGURE_2A
    script:
        "src/plot_figure2a.R"


rule convert_PathSeq_to_read_counts:
    wildcard_constraints:
        method="PathSeq"
    params:
        join("data", "PathSeq", "{}-{}", "pathseq.txt")
    input:
        "data/patients.tsv",
        "data/samples.tsv"
    output:
        MICROBE_READ_TABLE,
        SAMPLE_METADATA
    script:
        "src/convert_PathSeq_output_to_read_counts.py"


rule combine_STAR_output:
    params:
        join("data", "star", "{}-{}", "_STARpass2", "ReadsPerGene.out.tab")
    input:
        "data/patients.tsv",
        "data/samples.tsv",
    output:
        STAR_READCOUNT_TABLE
    script:
        "../src/combine_star_read_files.py"

rule combine_score_metrics:
    input:
        "data/samples.tsv"
    params:
        "data/PathSeq/{}-{}/score-metrics.txt"
    output:
        COMBINED_SCORE_METRICS
    script:
        "../src/combine_PathSeq_metrics.py"

rule combine_filter_metrics:
    input:
        "data/samples.tsv"
    params:
        "data/PathSeq/{}-{}/filter-metrics.txt"
    output:
        COMBINED_FILTER_METRICS
    script:
        "../src/combine_PathSeq_metrics.py"

rule download_filter_metrics:
    shell:
        "rsync -avc --include='filter-metrics.txt' --include='*/' --exclude='*' biowulf:/data/Robinson-SB/scRNA-seq-microbe-identification/Chung2017/output/ data/"

rule download_score_metrics:
    shell:
        "rsync -avc --include='score-metrics.txt' --include='*/' --exclude='*' biowulf:/data/Robinson-SB/scRNA-seq-microbe-identification/Chung2017/output/ data/"



# download STAR read count files
# rsync -avc --include='ReadsPerGene.out.tab' --include='*/' --exclude='*' helix:/data/Robinson-SB/scRNA-seq-microbe-identification/Chung2017/output/ data/

# download PathSeq files
# rsync -avc --include='pathseq.txt' --include='*/' --exclude='*' helix:/data/Robinson-SB/scRNA-seq-microbe-identification/Chung2017/output/ data/
