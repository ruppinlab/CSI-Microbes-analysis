from os.path import join
import pandas as pd

cells = pd.read_csv("data/units.tsv", sep="\t")


wildcard_constraints:
    celltype="Tumor|celltype1",
    patient="|".join(cells["patient"].unique())

include: "../rules/common.smk"
include: "../rules/analysis-10x.smk"
include: "../rules/hFDR.smk"



patients = cells["patient"].unique()
samples = cells[["patient", "sample"]].drop_duplicates()
tumor_samples = cells.loc[cells.Tumor == "Tumor"]["sample"].unique()
#samples = samples.loc[samples["sample"].isin(tumor_samples)]

FIGURE3A_1 = join("output", "plots", "figure_3A_1.pdf")
FIGURE3A_2 = join("output", "plots", "figure_3A_2.pdf")
FIGURE3B_1 = join("output", "plots", "figure_3B_1.pdf")
FIGURE3B_2 = join("output", "plots", "figure_3B_2.pdf")
#FIGURE5_extended = join("output", "plots", "{patient}", "{sample}", "figure5_extended_{microbe_of_interest}_{celltype}_{celltype_of_interest}_{celltype_comparison}_{tax_level}_{kingdom}_{method}.pdf")
#FIGURE3_extended = join("output", "plots", "{patient}", "{sample}", "figure3_extended_{microbe_of_interest}_{celltype}_{celltype_of_interest}_{celltype_comparison}_{tax_level}_{kingdom}_{method}.pdf")

MICROBE_READ_TABLE = join("output", "all", "{tax_level}_{method}_{kingdom}_reads.tsv")
SAMPLE_METADATA = join("output", "all", "{tax_level}_{method}_{kingdom}_metadata.tsv")
PATHSEQ_TAXID_MAP = join("output", "all", "tax_id_map_{tax_level}_{kingdom}_{method}.tsv")

#ALL_BINOM_MARKERS = join("output", "all", "binomial-{celltype}-{celltype_of_interest}-{celltype_comparison}-{tax_level}-{method}-{kingdom}-{pvaltype}-{lfc}-{block}-{direction}-{minprop}.tsv")
#SAMPLE_FISHER_EXACT = join("output", "{patient}", "{sample}", "fisher-exact-{celltype}-{celltype_of_interest}-{celltype_comparison}-{tax_level}-{method}-{kingdom}.tsv")


# exclude "SC001" for now - no tumors cells processed
rule all:
    input:
        FIGURE3A_1,
        FIGURE3A_2,
        FIGURE3B_1,
        FIGURE3B_2,
        SAMPLE_hFDR_FISHER_MARKERS.format(patient="SC001", sample="Sample1a",
                                          celltype="Tumor", celltype_of_interest="Tumor",
                                          celltype_comparison="nonTumor",
                                          method="PathSeq", kingdom="Bacteria", minprop=0.01),
        SAMPLE_hFDR_FISHER_MARKERS.format(patient="SC019", sample="Sample2a",
                                          celltype="Tumor", celltype_of_interest="Tumor",
                                          celltype_comparison="nonTumor",
                                          method="PathSeq", kingdom="Bacteria", minprop=0.01),
        SAMPLE_hFDR_FISHER_MARKERS.format(patient="SC021", sample="Sample3a",
                                          celltype="Tumor", celltype_of_interest="Tumor",
                                          celltype_comparison="nonTumor",
                                          method="PathSeq", kingdom="Bacteria", minprop=0.01),
        SAMPLE_hFDR_FISHER_MARKERS.format(patient="SC028", sample="Sample6a",
                                          celltype="Tumor", celltype_of_interest="Tumor",
                                          celltype_comparison="nonTumor",
                                          method="PathSeq", kingdom="Bacteria", minprop=0.01),
        SAMPLE_hFDR_FISHER_MARKERS.format(patient="SC030", sample="Sample8a",
                                          celltype="Tumor", celltype_of_interest="Tumor",
                                          celltype_comparison="nonTumor",
                                          method="PathSeq", kingdom="Bacteria", minprop=0.01),
        SAMPLE_hFDR_FISHER_MARKERS.format(patient="SC031", sample="Sample9a",
                                          celltype="Tumor", celltype_of_interest="Tumor",
                                          celltype_comparison="nonTumor",
                                          method="PathSeq", kingdom="Bacteria", minprop=0.01),


rule plot_figure_3:
    input:
        FIGURE3A_1,
        FIGURE3A_2,
        FIGURE3B_1,
        FIGURE3B_2,

rule plot_figure3A_1:
    input:
        SAMPLE_hFDR_FISHER_MARKERS.format(patient="SC028", sample="Sample6a",
                                          celltype="Tumor", celltype_of_interest="Tumor",
                                          celltype_comparison="nonTumor",
                                          method="PathSeq", kingdom="Bacteria", minprop=0.01),
        expand(SAMPLE_FISHER_EXACT, patient="SC028", sample="Sample6a",
               celltype="Tumor", celltype_of_interest="Tumor", minprop=0.01,
               celltype_comparison="nonTumor", method="PathSeq", kingdom="All",
               tax_level=["class", "order", "family", "genus", "species"])
    output:
        FIGURE3A_1
    script:
        "src/plot_figure_3A_1.R"

rule plot_figure3A_2:
    input:
        SAMPLE_MICROBE_READ_TABLE.format(patient="SC028", sample="Sample6a", tax_level="species", kingdom="All", method="PathSeq"),
        SAMPLE_SAMPLE_METADATA.format(patient="SC028", sample="Sample6a", tax_level="species", kingdom="All", method="PathSeq"),
        PATIENT_PATHSEQ_TAXID_MAP.format(patient="SC028", kingdom="All", method="PathSeq")
    output:
        FIGURE3A_2
    script:
        "src/plot_figure_3A_2.R"

rule plot_figure3B_1:
    input:
        expand(SAMPLE_FISHER_EXACT, patient="SC019", sample="Sample2a",
               celltype="Tumor", celltype_of_interest="Tumor", minprop=0.01,
               celltype_comparison="nonTumor", method="PathSeq", kingdom="All",
               tax_level=["class", "order", "family", "genus", "species"])
    output:
        FIGURE3B_1
    script:
        "src/plot_figure_3B_1.R"

rule plot_figure3B_2:
    input:
        SAMPLE_MICROBE_READ_TABLE.format(patient="SC019", sample="Sample2a", tax_level="species", kingdom="All", method="PathSeq"),
        SAMPLE_SAMPLE_METADATA.format(patient="SC019", sample="Sample2a", tax_level="species", kingdom="All", method="PathSeq"),
        PATIENT_PATHSEQ_TAXID_MAP.format(patient="SC019", kingdom="All", method="PathSeq")
    output:
        FIGURE3B_2
    script:
        "src/plot_figure_3B_2.R"


# rule analyze_all_patients:
#     input:
#         MICROBE_READ_TABLE,
#         SAMPLE_METADATA,
#         PATHSEQ_TAXID_MAP
#     output:
#         ALL_BINOM_MARKERS,
#     script:
#         "../src/run_scran_binomial_marker_analysis.R"

# rule combine_patients_data:
#     input:
#         read_table=expand(PATIENT_MICROBE_READ_TABLE, patient=patients, tax_level="{tax_level}",
#                kingdom="{kingdom}", method="{method}"),
#         metadata=expand(PATIENT_SAMPLE_METADATA, patient=patients, tax_level="{tax_level}",
#                kingdom="{kingdom}", method="{method}"),
#         map=expand(PATIENT_PATHSEQ_TAXID_MAP, patient=patients,
#                kingdom="{kingdom}", method="{method}")
#     output:
#         MICROBE_READ_TABLE,
#         SAMPLE_METADATA,
#         PATHSEQ_TAXID_MAP
#     script:
#         "src/combine_patient_data.py"




# rsync -avc --include='pathseq.txt' --include='*/' --exclude='*' helix:/data/Robinson-SB/CSI-Microbes-identification/Lee2020/output/ data/
# rsync -avc --include='*-scores.txt' --include='*/' --exclude='*' helix:/data/Robinson-SB/CSI-Microbes-identification/Lee2020/output/ data/
# rsync -avc --include='raw_feature_bc_matrix.h5' --include='*/' --exclude='*' helix:/data/Robinson-SB/CSI-Microbes-identification/Lee2020/ data/
